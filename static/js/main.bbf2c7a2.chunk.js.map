{"version":3,"sources":["components/Desk/Desk.js","components/CreateDesk/CreateDesk.js","components/DeskList/DeskList.js","App.js","index.js"],"names":["Desk","id","deleteDesk","name","className","onClick","bind","CreateDesk","update","useState","show","setShow","inpValue","setInpValue","createDesk","trim","length","alert","firebase","firestore","collection","add","then","docRef","get","doc","data","catch","error","console","log","onKeyDown","e","keyCode","autoFocus","type","value","onChange","target","DeskList","desks","setDesks","deleteDesks","delete","removeId","filter","useEffect","querySnapshot","dataDesks","forEach","push","map","desk","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAsBeA,G,MAjBF,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAC9B,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,QAASH,EAAWI,K,UAAWL,GAAKG,UAAU,eAAnD,eAGCD,O,yBC2DQI,EAhEI,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACTC,oBAAS,GADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEDF,mBAAS,IAFR,mBAE1BG,EAF0B,KAEhBC,EAFgB,KAI3BC,EAAa,WACjB,IAAKF,EAASG,OAAOC,OAEnB,OADAC,MAAM,0FACC,KAGEC,IAASC,YACjBC,WAAW,SACXC,IAAI,CACHlB,KAAMS,IAEPU,MAAK,SAACC,GAAD,OAAYA,EAAOC,SACxBF,MAAK,SAACG,GACLjB,EAAO,aACLP,GAAIwB,EAAIxB,IACLwB,EAAIC,YAGVJ,MAAK,kBAAMT,EAAY,OACvBc,OAAM,SAACC,GAAD,OAAWC,QAAQC,IAAIF,OAOlC,OAAIlB,EAEA,sBAAKN,UAAU,iBAAf,UACE,0GACA,uBACE2B,UAAW,SAACC,GACQ,KAAdA,EAAEC,SACJnB,KAGJoB,WAAS,EACTC,KAAK,OACLC,MAAOxB,EACPyB,SAAU,SAACL,GACTnB,EAAYmB,EAAEM,OAAOF,UAGzB,wBAAQ/B,QAASS,EAAWR,KAAK,GAAjC,wDACA,wBAAQD,QAAS,kBAAMM,GAAQ,IAA/B,iEAMJ,qBAAKN,QA5BY,WACjBM,GAAQ,IA2BiBL,KAAK,GAAOF,UAAU,aAA/C,wFCAWmC,G,MArDE,WAAO,IAAD,EACK9B,mBAAS,IADd,mBACd+B,EADc,KACPC,EADO,KAUfC,EAAc,SAACzC,GACRiB,IAASC,YAEjBC,WAAW,SACXK,IAAIxB,GACJ0C,SACArB,MAAK,kBATWsB,EASO3C,EAR1BwC,EAASD,EAAMK,QAAO,qBAAG5C,KAAgB2C,MADvB,IAACA,KAUhBjB,OAAM,SAACC,GAAD,OAAWC,QAAQD,MAAMA,OAmBpC,OAhBAkB,qBAAU,WACG5B,IAASC,YACjBC,WAAW,SACXI,MACAF,MAAK,SAACyB,GACL,IAAMC,EAAY,GAClBD,EAAcE,SAAQ,SAACxB,GACrBuB,EAAUE,KAAK,CACbjD,GAAIwB,EAAIxB,GACRE,KAAMsB,EAAIC,OAAOvB,UAGrBsC,EAASO,QAEZ,IAGD,sBAAK5C,UAAU,WAAf,UACGoC,EAAMW,KAAI,SAACC,GACV,OACE,cAAC,EAAD,CACEnD,GAAImD,EAAKnD,GACTC,WAAYwC,EACZvC,KAAMiD,EAAKjD,MACNiD,EAAKnD,OAIhB,cAAC,EAAD,CAAYO,OA7CI,SAAC4C,GACnBX,EAAS,GAAD,mBAAKD,GAAL,CAAYY,a,MCETC,MATf,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,+CACA,cAAC,EAAD,Q,kBCeNc,IAASoC,cAXc,CACrBC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,mDACbC,UAAW,eACXC,cAAe,2BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIjB5C,IAAS6C,YAETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.bbf2c7a2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './Desk.css'\r\n\r\nconst Desk = ({ id, deleteDesk, name }) => {\r\n  return (\r\n    <div className=\"Desk\">\r\n      <div onClick={deleteDesk.bind(this, id)} className=\"Desk__delete\">\r\n        X\r\n      </div>\r\n      {name}\r\n    </div>\r\n  )\r\n}\r\n\r\nDesk.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  deleteDesk: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Desk\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport firebase from 'firebase/app'\r\n\r\nimport './CreateDesk.css'\r\n\r\nconst CreateDesk = ({ update }) => {\r\n  const [show, setShow] = useState(false)\r\n  const [inpValue, setInpValue] = useState('')\r\n\r\n  const createDesk = () => {\r\n    if (!inpValue.trim().length) {\r\n      alert('найс пустое поле')\r\n      return null\r\n    }\r\n\r\n    const db = firebase.firestore()\r\n    db.collection('desks')\r\n      .add({\r\n        name: inpValue,\r\n      })\r\n      .then((docRef) => docRef.get()) //делает return\r\n      .then((doc) => {\r\n        update({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        })\r\n      })\r\n      .then(() => setInpValue(''))\r\n      .catch((error) => console.log(error))\r\n  }\r\n\r\n  const showCreate = () => {\r\n    setShow(true)\r\n  }\r\n\r\n  if (show) {\r\n    return (\r\n      <div className=\"CreateShowDesk\">\r\n        <p>Создать доску</p>\r\n        <input\r\n          onKeyDown={(e) => {\r\n            if (e.keyCode === 13) {\r\n              createDesk()\r\n            }\r\n          }}\r\n          autoFocus\r\n          type=\"text\"\r\n          value={inpValue}\r\n          onChange={(e) => {\r\n            setInpValue(e.target.value)\r\n          }}\r\n        />\r\n        <button onClick={createDesk.bind(this)}>Создать</button>\r\n        <button onClick={() => setShow(false)}>Отменить</button>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div onClick={showCreate.bind(this)} className=\"CreateDesk\">\r\n      Создать доску\r\n    </div>\r\n  )\r\n}\r\n\r\nCreateDesk.propTypes = {\r\n  update: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default CreateDesk\r\n","import React, { useState, useEffect } from 'react'\r\nimport firebase from 'firebase/app'\r\nimport Desk from '../Desk/Desk'\r\nimport CreateDesk from '../CreateDesk/CreateDesk'\r\n\r\nimport './DeskList.css'\r\n\r\nconst DeskList = () => {\r\n  const [desks, setDesks] = useState([])\r\n\r\n  const updateDesks = (desk) => {\r\n    setDesks([...desks, desk])\r\n  }\r\n\r\n  const removeDesks = (removeId) =>\r\n    setDesks(desks.filter(({ id }) => id !== removeId))\r\n\r\n  const deleteDesks = (id) => {\r\n    const db = firebase.firestore()\r\n\r\n    db.collection('desks')\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => removeDesks(id))\r\n      .catch((error) => console.error(error))\r\n  }\r\n\r\n  useEffect(() => {\r\n    const db = firebase.firestore()\r\n    db.collection('desks')\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        const dataDesks = []\r\n        querySnapshot.forEach((doc) => {\r\n          dataDesks.push({\r\n            id: doc.id,\r\n            name: doc.data().name,\r\n          })\r\n        })\r\n        setDesks(dataDesks)\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"DeskList\">\r\n      {desks.map((desk) => {\r\n        return (\r\n          <Desk\r\n            id={desk.id}\r\n            deleteDesk={deleteDesks}\r\n            name={desk.name}\r\n            key={desk.id}\r\n          />\r\n        )\r\n      })}\r\n      <CreateDesk update={updateDesks} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DeskList\r\n","import DeskList from './components/DeskList/DeskList'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>My Trello App</h1>\n      <DeskList />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nimport firebase from 'firebase/app'\n\nimport 'firebase/analytics'\n\nimport 'firebase/auth'\nimport 'firebase/firestore'\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyA7yYX44D8IkrcCdClrhK0mxz2B91kOCuU',\n  authDomain: 'trello-e73bd.firebaseapp.com',\n  databaseURL: 'https://trello-e73bd-default-rtdb.firebaseio.com',\n  projectId: 'trello-e73bd',\n  storageBucket: 'trello-e73bd.appspot.com',\n  messagingSenderId: '695558317459',\n  appId: '1:695558317459:web:6769ef5cc63d6996a6b466',\n  measurementId: 'G-YEPPQX27WJ',\n}\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig)\nfirebase.analytics()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}